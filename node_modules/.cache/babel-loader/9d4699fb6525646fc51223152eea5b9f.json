{"ast":null,"code":"var _jsxFileName = \"E:\\\\React-assignmnt-login\\\\react-login\\\\src\\\\LoginPage\\\\LoginPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Username from '../LoginPage/Username';\nimport Password from '../LoginPage/Password';\nimport ButtonLogin from '../LoginPage/ButtonLogin';\nimport * as loginData from './Login.json';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LoginPage() {\n  _s();\n\n  const [name, setName] = useState();\n  const [pass, setPass] = useState();\n  const [userError, setUserError] = useState(false);\n  const [passError, setPassError] = useState(false);\n  const [redirect, setRedirect] = useState(null);\n\n  const inputEvent = event => {\n    // console.log(event.target.value)\n    if (event.target.value.length < 3) {\n      setUserError(true);\n    } else {\n      setUserError(false);\n    }\n\n    setName(event.target.value);\n  };\n\n  const inputPassEvent = event => {\n    // console.log(event.target.value)\n    if (event.target.value.length < 3) {\n      setPassError(true);\n    } else {\n      setPassError(false);\n    }\n\n    setPass(event.target.value);\n  };\n\n  if (redirect) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: redirect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 16\n    }, this);\n  }\n\n  const onSubmits = event => {\n    // console.log('i clicked', event);setRedirect\n    if (name === loginData.username && pass === loginData.password) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/employee\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this);\n    } else {\n      alert('Not submitted');\n    }\n\n    event.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: onSubmits,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Hello \", name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Username, {\n        uname: name,\n        change: inputEvent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), userError ? /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"User not valid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 28\n      }, this) : \"\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Password, {\n        upass: pass,\n        changePass: inputPassEvent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), passError ? /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Password not valid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 28\n      }, this) : \"\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ButtonLogin, {\n        click: onSubmits\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LoginPage, \"uQpgcxxGk55vtkY9ki+pBr63Wmw=\");\n\n_c = LoginPage;\nexport default LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["E:/React-assignmnt-login/react-login/src/LoginPage/LoginPage.js"],"names":["React","useState","Username","Password","ButtonLogin","loginData","BrowserRouter","Router","Switch","Route","Redirect","LoginPage","name","setName","pass","setPass","userError","setUserError","passError","setPassError","redirect","setRedirect","inputEvent","event","target","value","length","inputPassEvent","onSubmits","username","password","alert","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport Username from '../LoginPage/Username';\r\nimport Password from '../LoginPage/Password';\r\nimport ButtonLogin from '../LoginPage/ButtonLogin';\r\nimport * as loginData from './Login.json';\r\nimport {\r\n    BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n    Redirect\r\n  } from \"react-router-dom\";\r\n function LoginPage() {\r\n\r\n    const [name, setName] = useState();\r\n    const [pass, setPass] = useState();\r\n    const [userError, setUserError] = useState(false);\r\n    const [passError, setPassError] = useState(false);\r\n    const [redirect, setRedirect] = useState(null);\r\n\r\n\r\n    const inputEvent = (event) => {\r\n        // console.log(event.target.value)\r\n         \r\n        if(event.target.value.length < 3) {\r\n            setUserError(true)\r\n        }\r\n        else {\r\n            setUserError(false)\r\n        }\r\n        setName(event.target.value);\r\n      };\r\n\r\n      const inputPassEvent = (event) => {\r\n        // console.log(event.target.value)\r\n\r\n        if(event.target.value.length < 3) {\r\n            setPassError(true)\r\n        }\r\n        else {\r\n            setPassError(false)\r\n        }\r\n        setPass(event.target.value);\r\n    };\r\n\r\n    if (redirect) {\r\n        return <Redirect to={redirect} />\r\n      }\r\n\r\n\r\n    const onSubmits = (event) => {\r\n        // console.log('i clicked', event);setRedirect\r\n\r\n        if((name===loginData.username) && (pass===loginData.password)){\r\n           \r\n            return  <Redirect to=\"/employee\" /> \r\n        }\r\n        else {\r\n            alert('Not submitted');\r\n        }\r\n        event.preventDefault();\r\n\r\n\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={onSubmits}>\r\n            <div>\r\n                <h1>Hello {name}</h1>\r\n                <Username uname={name} change={inputEvent} />\r\n                {userError?<span>User not valid</span>: \"\"}\r\n                <br />\r\n                <Password upass={pass} changePass={inputPassEvent} />\r\n                {passError?<span>Password not valid</span>: \"\"}\r\n\r\n                <br />\r\n                <ButtonLogin click={onSubmits} />\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default LoginPage\r\n"]},"metadata":{},"sourceType":"module"}